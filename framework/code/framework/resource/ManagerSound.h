//==============================================================================
//
// File   : ManagerSound.h
// Brief  : サウンド管理クラス
// Author : Taiga Shirakawa
// Date   : 2015/10/25 sun : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_MANAGER_SOUND_H
#define MY_MANAGER_SOUND_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "xaudio2.h"
#include "ManagerResource.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************

//******************************************************************************
// クラス定義
//******************************************************************************
template< class TypeItem >
class ManagerSound : public ManagerResource< TypeItem >
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	ManagerSound( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~ManagerSound( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : TCHAR* pDirectory					: 基準ディレクトリ
	// Arg    : int maximumItem						: 最大要素数
	// Arg    : IXAudio2* pXAudio					: XAudio2インターフェース
	//==============================================================================
	int Initialize( TCHAR* pDirectory, int maximumItem, IXAudio2* pXAudio );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : TCHAR* pDirectory					: 基準ディレクトリ
	// Arg    : int maximumItem						: 最大要素数
	// Arg    : IXAudio2* pXAudio					: XAudio2インターフェース
	//==============================================================================
	int Reinitialize( TCHAR* pDirectory, int maximumItem, IXAudio2* pXAudio );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : ManagerSound* pOut					: コピー先アドレス
	//==============================================================================
	int Copy( ManagerSound* pOut ) const;

	//==============================================================================
	// アクセサ
	//==============================================================================
	IXAudio2* GetXAudio( void ) const;

protected:

private:
	ManagerSound( const ManagerSound& );
	ManagerSound operator=( const ManagerSound& );

	void InitializeSelf( void );
	int LoadResource( TCHAR* pPath, int index );
	void ReleaseResource( int index );

	static HRESULT CheckChunk( HANDLE handle, DWORD format, DWORD* pSize, DWORD* pPosition );
	static HRESULT ReadChunk( HANDLE handle, void* pBuffer, DWORD offset, DWORD size );

	IXAudio2*	pXAudio_;		// XAudio2インターフェース
};

#endif	// MY_MANAGER_SOUND_H
