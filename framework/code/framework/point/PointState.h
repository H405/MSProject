//==============================================================================
//
// File   : PointState.h
// Brief  : ポイントスプライトのステート
// Author : Taiga Shirakawa
// Date   : 2015/10/22 thu : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_POINT_STATE_H
#define MY_POINT_STATE_H

//******************************************************************************
// インクルード
//******************************************************************************

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************
class Point;

//******************************************************************************
// クラス定義
//******************************************************************************
class PointState
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	PointState( void ) {}

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	virtual ~PointState( void ) {}

	//==============================================================================
	// Brief  : 設定
	// Return : void								: なし
	// Arg    : Point* pPoint						: 対象
	//==============================================================================
	virtual void Update( Point* pPoint );

protected:

private:
};

//******************************************************************************
// クラス定義
//******************************************************************************
class PointStateNone : public PointState
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	PointStateNone( void ) {}

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~PointStateNone( void ) {}

	//==============================================================================
	// Brief  : 設定
	// Return : void								: なし
	// Arg    : Point* pPoint						: 対象
	//==============================================================================
	void Update( Point* pPoint );

protected:

private:
};

//******************************************************************************
// クラス定義
//******************************************************************************
class PointStateAdd : public PointState
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	PointStateAdd( void ) {}

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~PointStateAdd( void ) {}

	//==============================================================================
	// Brief  : 設定
	// Return : void								: なし
	// Arg    : Point* pPoint						: 対象
	//==============================================================================
	void Update( Point* pPoint );

protected:

private:
};

//******************************************************************************
// クラス定義
//******************************************************************************
class PointStateMultiply : public PointState
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	PointStateMultiply( void ) {}

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~PointStateMultiply( void ) {}

	//==============================================================================
	// Brief  : 設定
	// Return : void								: なし
	// Arg    : Point* pPoint						: 対象
	//==============================================================================
	void Update( Point* pPoint );

protected:

private:
};

#endif	// MY_POINT_STATE_H
