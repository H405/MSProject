//==============================================================================
//
// File   : DirectInput.cpp
// Brief  : 入力デバイスクラス
// Author : Taiga Shirakawa
// Date   : 2015/10/12 mon : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルード
//******************************************************************************
#include <tchar.h>
#include "DirectInput.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ定義
//******************************************************************************

//******************************************************************************
// 静的メンバ変数
//******************************************************************************

//==============================================================================
// Brief  : コンストラクタ
// Return : 									: 
// Arg    : void								: なし
//==============================================================================
DirectInput::DirectInput( void )
{
	// クラス内の初期化処理
	InitializeSelf();
}

//==============================================================================
// Brief  : デストラクタ
// Return : 									: 
// Arg    : void								: なし
//==============================================================================
DirectInput::~DirectInput( void )
{
	// 終了処理
	Finalize();
}

//==============================================================================
// Brief  : 初期化処理
// Return : int									: 実行結果
// Arg    : HINSTANCE instanceHandle			: インスタンスハンドル
//==============================================================================
int DirectInput::Initialize( HINSTANCE instanceHandle )
{
	// DirectInputオブジェクトの作成
	if( pDirectInput_ == nullptr )
	{
		if( FAILED( DirectInput8Create( instanceHandle, DIRECTINPUT_VERSION, IID_IDirectInput8, reinterpret_cast< void** >( &pDirectInput_ ), NULL ) ) )
		{
			MessageBox( NULL, _T( "DirectInputオブジェクトの作成に失敗しました" ), _T( "エラー" ), MB_OK );
			return 1;
		}
	}

	// 正常終了
	return 0;
}

//==============================================================================
// Brief  : 終了処理
// Return : int									: 実行結果
// Arg    : void								: なし
//==============================================================================
int DirectInput::Finalize( void )
{
	// クラス内の初期化処理
	InitializeSelf();

	// 正常終了
	return 0;
}

//==============================================================================
// Brief  : 再初期化処理
// Return : int									: 実行結果
// Arg    : HINSTANCE instanceHandle			: インスタンスハンドル
//==============================================================================
int DirectInput::Reinitialize( HINSTANCE instanceHandle )
{
	// 終了処理
	int		result;		// 実行結果
	result = Finalize();
	if( result != 0 )
	{
		return result;
	}

	// 初期化処理
	return Initialize( instanceHandle );
}

//==============================================================================
// Brief  : クラスのコピー
// Return : int									: 実行結果
// Arg    : DirectInput* pOut					: コピー先アドレス
//==============================================================================
int DirectInput::Copy( DirectInput* pOut ) const
{
	// 正常終了
	return 0;
}

//==============================================================================
// Brief  : DirectInputオブジェクトの取得
// Return : IDirectInput8*						: 返却する値
// Arg    : void								: なし
//==============================================================================
IDirectInput8* DirectInput::GetDirectInput( void ) const
{
	// 値の返却
	return pDirectInput_;
}

//==============================================================================
// Brief  : クラス内の初期化処理
// Return : void								: なし
// Arg    : void								: なし
//==============================================================================
void DirectInput::InitializeSelf( void )
{
	// メンバ変数の初期化
	pDirectInput_ = nullptr;
}
