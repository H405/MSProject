//==============================================================================
//
// File   : CameraStateDebug.h
// Brief  : デバッグステート
// Author : Taiga Shirakawa
// Date   : 2015/10/13 tue : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_CAMERA_STATE_DEBUG_H
#define MY_CAMERA_STATE_DEBUG_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "CameraState.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************
class InputMouse;

//******************************************************************************
// クラス定義
//******************************************************************************
class CameraStateDebug : public CameraState
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	CameraStateDebug( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~CameraStateDebug( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Initialize( void );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Reinitialize( void );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : CameraStateDebug* pOut				: コピー先アドレス
	//==============================================================================
	int Copy( CameraStateDebug* pOut ) const;

	//==============================================================================
	// Brief  : 更新処理
	// Return : void								: なし
	// Arg    : CameraObject* pCamera				: カメラクラス
	//==============================================================================
	void Update( CameraObject* pCamera );

#ifdef _DEVELOP
	//==============================================================================
	// Brief  : マウス入力クラスの設定
	// Return : void								: なし
	// Arg    : InputMouse* pMouse					: マウス入力クラス
	//==============================================================================
	static void SetInputMouse( InputMouse* pMouse );
#endif

protected:

private:
	void InitializeSelf( void );
	CameraStateDebug( const CameraStateDebug& );
	CameraStateDebug operator=( const CameraStateDebug& );

	static InputMouse*	pMouse_;		// マウス入力クラス

	int		positionPreviousX_;		// 前回のX座標
	int		positionPreviousY_;		// 前回のY座標
	bool	isDraggingLeft_;		// 左ドラッグ中フラグ
	bool	isDraggingRight_;		// 右ドラッグ中フラグ
};

#endif	// MY_CAMERA_STATE_DEBUG_H
