//==============================================================================
//
// File   : DirectInput.h
// Brief  : 入力デバイスクラス
// Author : Taiga Shirakawa
// Date   : 2015/10/12 mon : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_INPUT_DEVICE_H
#define MY_INPUT_DEVICE_H

//******************************************************************************
// インクルード
//******************************************************************************
#include <windows.h>
#define DIRECTINPUT_VERSION (0x0800)    // 警告対策用
#include "dinput.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************

//******************************************************************************
// クラス定義
//******************************************************************************
class DirectInput
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	DirectInput( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~DirectInput( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : HINSTANCE instanceHandle			: インスタンスハンドル
	//==============================================================================
	int Initialize( HINSTANCE instanceHandle );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : HINSTANCE instanceHandle			: インスタンスハンドル
	//==============================================================================
	int Reinitialize( HINSTANCE instanceHandle );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : DirectInput* pOut					: コピー先アドレス
	//==============================================================================
	int Copy( DirectInput* pOut ) const;

	//==============================================================================
	// アクセサ
	//==============================================================================
	IDirectInput8* GetDirectInput( void ) const;

protected:

private:
	void InitializeSelf( void );
	DirectInput( const DirectInput& );
	DirectInput operator=( const DirectInput& );

	IDirectInput8*	pDirectInput_;		// DirectInputオブジェクト
};

#endif	// MY_INPUT_DEVICE_H
