//==============================================================================
//
// File   : PolygonPoint.h
// Brief  : ポイントスプライトポリゴン
// Author : Taiga Shirakawa
// Date   : 2015/10/21 wed : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_POLYGON_POINT_H
#define MY_POLYGON_POINT_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "d3dx9.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************
class Vertex;

//******************************************************************************
// クラス定義
//******************************************************************************
class PolygonPoint
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	PolygonPoint( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~PolygonPoint( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : int maximumItem						: 最大要素数
	// Arg    : IDirect3DDevice9* pDevice			: Direct3Dデバイス
	//==============================================================================
	int Initialize( int maximumItem, IDirect3DDevice9* pDevice );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : int maximumItem						: 最大要素数
	// Arg    : IDirect3DDevice9* pDevice			: Direct3Dデバイス
	//==============================================================================
	int Reinitialize( int maximumItem, IDirect3DDevice9* pDevice );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : PolygonPoint* pOut					: コピー先アドレス
	//==============================================================================
	int Copy( PolygonPoint* pOut ) const;

	//==============================================================================
	// Brief  : 描画処理
	// Return : void								: なし
	// Arg    : void								: なし
	//==============================================================================
	void Draw( void );

protected:

private:
	void InitializeSelf( void );
	PolygonPoint( const PolygonPoint& );
	PolygonPoint operator=( const PolygonPoint& );

	int						maximumItem_;		// 最大要素数
	int						countItem_;			// 使用要素数
	IDirect3DDevice9*		pDevice_;			// Direct3Dデバイス
	IDirect3DVertexBuffer9*	pVertexBuffer_;		// 頂点バッファ
	Vertex*					pVertex_;			// 頂点情報
};

#endif	// MY_POLYGON_POINT_H
