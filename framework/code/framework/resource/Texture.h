//==============================================================================
//
// File   : Texture.h
// Brief  : テクスチャクラス
// Author : Taiga Shirakawa
// Date   : 2015/10/15 thu : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_TEXTURE_H
#define MY_TEXTURE_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "d3dx9.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************

//******************************************************************************
// クラス定義
//******************************************************************************
class Texture
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	Texture( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~Texture( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : IDirect3DTexture9* pTexture			: テクスチャ
	// Arg    : unsigned int width					: 幅
	// Arg    : unsigned int height					: 高さ
	//==============================================================================
	int Initialize( IDirect3DTexture9* pTexture, unsigned int width, unsigned int height );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : IDirect3DTexture9* pTexture			: テクスチャ
	// Arg    : unsigned int width					: 幅
	// Arg    : unsigned int height					: 高さ
	//==============================================================================
	int Reinitialize( IDirect3DTexture9* pTexture, unsigned int width, unsigned int height );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : Texture* pOut						: コピー先アドレス
	//==============================================================================
	int Copy( Texture* pOut ) const;

	IDirect3DTexture9*	pTexture_;		// テクスチャ
	unsigned int		width_;			// 幅
	unsigned int		height_;		// 高さ

protected:

private:
	void InitializeSelf( void );
	Texture( const Texture& );
	Texture operator=( const Texture& );

};

#endif	// MY_TEXTURE_H
