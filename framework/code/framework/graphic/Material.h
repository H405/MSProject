//==============================================================================
//
// File   : Material.h
// Brief  : マテリアルクラス
// Author : Taiga Shirakawa
// Date   : 2015/10/18 sun : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_MATERIAL_H
#define MY_MATERIAL_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "d3dx9.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************

//******************************************************************************
// クラス定義
//******************************************************************************
class Material
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	Material( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~Material( void );

	D3DXCOLOR	diffuse_;			// ディフューズ色
	D3DXCOLOR	specular_;			// スペキュラ色
	D3DXCOLOR	ambient_;			// アンビエント色
	D3DXCOLOR	emmisive_;			// エミッション色
	float		reflection_;		// 反射率
	float		power_;				// 反射の強さ
	float		refractive_;		// 屈折率

protected:

private:
	void InitializeSelf( void );
};

#endif	// MY_MATERIAL_H
