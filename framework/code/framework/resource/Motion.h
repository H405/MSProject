//==============================================================================
//
// File   : Motion.h
// Brief  : モーションクラス
// Author : Taiga Shirakawa
// Date   : 2015/10/31 sat : Taiga Shirakawa : create
//
//==============================================================================

//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef MY_MOTION_H
#define MY_MOTION_H

//******************************************************************************
// インクルード
//******************************************************************************
#include "d3dx9.h"

//******************************************************************************
// ライブラリ
//******************************************************************************

//******************************************************************************
// マクロ
//******************************************************************************

//******************************************************************************
// クラス前方宣言
//******************************************************************************

//******************************************************************************
// クラス定義
//******************************************************************************
class Motion
{
public:
	//==============================================================================
	// Brief  : コンストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	Motion( void );

	//==============================================================================
	// Brief  : デストラクタ
	// Return : 									: 
	// Arg    : void								: なし
	//==============================================================================
	~Motion( void );

	//==============================================================================
	// Brief  : 初期化処理
	// Return : int									: 実行結果
	// Arg    : unsigned int countFrame				: フレーム数
	// Arg    : unsigned int countBone				: ボーン数
	//==============================================================================
	int Initialize( unsigned int countFrame, unsigned int countBone );

	//==============================================================================
	// Brief  : 終了処理
	// Return : int									: 実行結果
	// Arg    : void								: なし
	//==============================================================================
	int Finalize( void );

	//==============================================================================
	// Brief  : 再初期化処理
	// Return : int									: 実行結果
	// Arg    : unsigned int countFrame				: フレーム数
	// Arg    : unsigned int countBone				: ボーン数
	//==============================================================================
	int Reinitialize( unsigned int countFrame, unsigned int countBone );

	//==============================================================================
	// Brief  : クラスのコピー
	// Return : int									: 実行結果
	// Arg    : Motion* pOut						: コピー先アドレス
	//==============================================================================
	int Copy( Motion* pOut ) const;

	//==============================================================================
	// アクセサ
	//==============================================================================
	unsigned int GetCountFrame( void ) const;
	unsigned int GetCountBone( void ) const;
	void SetMatrixBone( int indexFrame, int indexBone, const D3DXMATRIX& value );
	void GetMatrixBone( int indexFrame, int indexBone, D3DXMATRIX* pOut ) const;

protected:

private:
	void InitializeSelf( void );
	Motion( const Motion& );
	Motion operator=( const Motion& );

	unsigned int	countFrame_;		// フレーム数
	unsigned int	countBone_;			// ボーン数
	D3DXMATRIX*		pMatrixBone_;		// ボーン変換行列
};

#endif	// MY_MOTION_H
